/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-22 02:11:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662604091462L));
    _jspx_dependants.put("jar:file:/C:/java0711/javawork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringMiniProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/java0711/javawork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringMiniProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Anton&family=Edu+VIC+WA+NT+Beginner:wght@600&family=Gamja+Flower&family=Single+Day&family=Jua&family=Nanum+Pen+Script&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.0.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	*{\r\n");
      out.write("		font-family: 'Jua';\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#showimg{\r\n");
      out.write("		border: 1px solid gray;\r\n");
      out.write("		width: 150px;\r\n");
      out.write("		height: 180px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function () {\r\n");
      out.write("		//버튼 클릭 시 사진 불러오는 이벤트 추가\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btnphoto\").click(function () {\r\n");
      out.write("			$(\"#myphoto\").trigger(\"click\");	\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//사진 불러오면 미리보기하기\r\n");
      out.write("		$(\"#myphoto\").change(function(){\r\n");
      out.write("			 /* console.log(\"1:\"+$(this)[0].files.length);\r\n");
      out.write("			 console.log(\"2:\"+$(this)[0].files[0]); */\r\n");
      out.write("			 \r\n");
      out.write("			 //정규표현식\r\n");
      out.write("			var reg = /(.*?)\\/(jpg|jpeg|png|bmp|gif)$/;\r\n");
      out.write("			var f=$(this)[0].files[0];//현재 선택한 파일\r\n");
      out.write("			if(!f.type.match(reg)){\r\n");
      out.write("			  alert(\"확장자가 이미지파일이 아닙니다\");\r\n");
      out.write("			  return;\r\n");
      out.write("			}\r\n");
      out.write("			 if($(this)[0].files[0]){\r\n");
      out.write("			  var reader=new FileReader();\r\n");
      out.write("			  reader.onload=function(e){\r\n");
      out.write("			   $(\"#showimg\").attr(\"src\",e.target.result);\r\n");
      out.write("			  }\r\n");
      out.write("			  reader.readAsDataURL($(this)[0].files[0]);\r\n");
      out.write("			 }\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//아이디 입력 시 .idsuccess 값 지우기\r\n");
      out.write("		$(\"#loginid\").keydown(function () {\r\n");
      out.write("			$(\"div.idsuccess\").text(\"\");\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		//중복체크 버튼 클릭 시 ID체크\r\n");
      out.write("		$(\"#btnidcheck\").click(function () {\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type:\"get\",\r\n");
      out.write("				dataType:\"json\",\r\n");
      out.write("				url:\"idcheck\",\r\n");
      out.write("				data:{\"id\":$(\"#loginid2\").val()},	//loginid가 충돌나는 현상있어서 2로바꿈\r\n");
      out.write("				success:function(res){\r\n");
      out.write("					\r\n");
      out.write("					if(res.count==0){\r\n");
      out.write("						$(\"div.idsuccess\").text(\"ok\");	\r\n");
      out.write("					}else{\r\n");
      out.write("						$(\"div.idsuccess\").text(\"fail\");\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				}	//res\r\n");
      out.write("				\r\n");
      out.write("			}); //ajax\r\n");
      out.write("		});	//id체크\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//2번째 비밀번호(pass2) 입력 시 체크\r\n");
      out.write("		$(\"#pass2\").keyup(function () {\r\n");
      out.write("			\r\n");
      out.write("			var p1=$(\"#pass\").val();\r\n");
      out.write("			var p2=$(this).val();\r\n");
      out.write("			\r\n");
      out.write("			if(p1==p2){\r\n");
      out.write("				$(\"div.passsuccess\").text(\"ok\");\r\n");
      out.write("			}else{\r\n");
      out.write("				$(\"div.passsuccess\").text(\"\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});	//pass2 체크\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	});//function\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	//submit 전에 호출\r\n");
      out.write("	//form action 코드 마지막에 onsubmit으로 return check() 있음\r\n");
      out.write("	\r\n");
      out.write("	function check() {\r\n");
      out.write("		\r\n");
      out.write("		//사진 넣었는지 체크\r\n");
      out.write("		if($(\"#myphoto\").val()==''){\r\n");
      out.write("			alert(\"사진을 넣어주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//아이디 중복체크 했는지 여부\r\n");
      out.write("		if($(\"div.idsuccess\").text()!='ok'){	//ok가 아니면\r\n");
      out.write("			alert(\"아이디 중복체크를 해주세요\")\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//비밀번호 중복체크 했는지 여부\r\n");
      out.write("		if($(\"div.passsuccess\").text()!='ok'){	//ok가 아니면\r\n");
      out.write("			alert(\"비밀번호가 서로 다릅니다\")\r\n");
      out.write("			\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- <h1>회원가입폼</h1> -->\r\n");
      out.write("	<h4 class=\"alert alert-secondary\">회원가입</h4></caption>\r\n");
      out.write("    <form action=\"insert\" method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return check()\">\r\n");
      out.write("        <table class=\"table table-bordered\" style=\"width: 600px;\">\r\n");
      out.write("            <tr>\r\n");
      out.write("            	<td style=\"width:200px\" rowspan=\"4\" align=\"center\">\r\n");
      out.write("            		\r\n");
      out.write("            		<input type=\"file\" id=\"myphoto\" name=\"myphoto\" style=\"display: none;\">\r\n");
      out.write("            		<button type=\"button\" id=\"btnphoto\" class=\"btn btn-secondary btn-sm\">사진 선택</button>\r\n");
      out.write("            		<br><br>\r\n");
      out.write("            		\r\n");
      out.write("            		<img id=\"showimg\">\r\n");
      out.write("            		\r\n");
      out.write("            	</td>\r\n");
      out.write("            	<td>\r\n");
      out.write("            		<div class=\"input-group\">\r\n");
      out.write("	            		<input type=\"text\" placeholder=\"아이디 입력\" id=\"loginid2\" name=\"loginid\"\r\n");
      out.write("	            		class=\"form-control\" style=\"width: 120px;\" required=\"required\">\r\n");
      out.write("	            	\r\n");
      out.write("	            		<button type=\"button\" class=\"btn btn-dark btn-sm\" id=\"btnidcheck\">중복 체크</button>\r\n");
      out.write("	            		&nbsp;\r\n");
      out.write("	            		<div class=\"idsuccess\" style=\"width: 60px\"></div>\r\n");
      out.write("            		</div>\r\n");
      out.write("           		</td>       \r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<div class=\"input-group\">\r\n");
      out.write("						<input type=\"password\" style=\"width: 120px;\" class=\"form-control\"\r\n");
      out.write("						name=\"pass\" id=\"pass\" placeholder=\"숫자 4자리\" maxlength=\"4\" pattern=\"[0-9]{4,}\"\r\n");
      out.write("						required=\"required\">\r\n");
      out.write("						\r\n");
      out.write("						<input type=\"password\" style=\"width: 120px;\" class=\"form-control\"\r\n");
      out.write("						id=\"pass2\" placeholder=\"숫자 4자리\" maxlength=\"4\" pattern=\"[0-9]{4,}\"\r\n");
      out.write("						required=\"required\">\r\n");
      out.write("						&nbsp;\r\n");
      out.write("						<div class=\"passsuccess\" style=\"width: 60px\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"text\" name=\"name\" class=\"fomr-control\" style=\"width: 150px;\"\r\n");
      out.write("					placeholder=\"이름을 입력하세요\" required=\"required\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"email\" name=\"email\" class=\"fomr-control\" \r\n");
      out.write("					placeholder=\"이메일을 입력하세요\" required=\"required\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\">\r\n");
      out.write("					<div class=\"input-group\">\r\n");
      out.write("						<input type=\"text\" name=\"hp\" placeholder=\"(-)없이 번호만 입력\"  class=\"form-control\"\r\n");
      out.write("						style=\"width: 100px;\" required=\"required\">\r\n");
      out.write("						\r\n");
      out.write("						<input type=\"text\" name=\"address\" placeholder=\"주소 입력\"  class=\"form-control\"\r\n");
      out.write("						style=\"width: 300px;\" required=\"required\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\">\r\n");
      out.write("					<button type=\"submit\" class=\"btn btn-success\" style=\"width: 180px;\">회원가입</button>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
